print('Render volume with cut plane')

local camera = Camera()
camera:SetScreenSize(1024, 1024)
camera:SetFilename('image_volume_cut_plane.jpg')

camera:LookAt(
	40, 40,80,
	0,0,0,
	0,1,0,
	60
)

function JetTransferFunctionTexture()
   -- Create 1D transfer function texture
   -- Jet color table from OSPray example
   -- r, g, b, alpha
   local tf =
        { 0         , 0           , 0.562493 , 1.0
        , 0         , 0           , 1        , 1.0
        , 0         , 1           , 1        , 1.0
        , 0.500008  , 1           , 0.500008 , 1.0
        , 1         , 1           , 0        , 1.0
        , 1         , 0           , 0        , 1.0
        , 0.500008  , 0           , 0        , 1.0 }

   local width = #tf / 4
   local tfTex = GenTexture()
   tfTex:Create2D(tf, 3, width, 1); -- 3 = RGBA32F

   return tfTex;
end


local sph = LoadModule("SphLoader")
sph:Load('fvel_0000001470.sph')

print("origin", sph:OriginX(), sph:OriginY(), sph:OriginZ())
print("pitch", sph:PitchX(), sph:PitchY(), sph:PitchZ())
print("time", sph:Time())
print("step", sph:Step())

local volume = VolumeModel()
local volumedata = sph:VolumeData()

volume:Create(volumedata)

local analy = LoadModule("Analyzer").VolumeAnalyzer()
analy:Execute(volume)
print('volume min/max X:', analy:MinX(), analy:MaxX())
print('volume min/max Y:', analy:MinY(), analy:MaxY())
print('volume min/max Z:', analy:MinZ(), analy:MaxZ())

volume:SetShader('def_volume_cut_plane.frag')
local tftex = JetTransferFunctionTexture()

volume:SetTexture('tf_tex', tftex:ImageData())
volume:SetClampToEdge(true, true, true)
volume:SetTextureWrapping('tf_tex', true, true, true) -- CLAMP_TO_EDGE wrap mode for transfer function texture.
volume:SetFloat('tf_min', -0.05)
volume:SetFloat('tf_max', 0.2)
volume:SetFloat('tf_opacity', 0.001)

volume:SetVec4('cut_plane', 0.0, 0.0, 1.0, 0.0)
volume:SetFloat('enable_cut_plane', 1.0)

-- volume:SetVec4('contour_param', -0.5, 0.5, 0.1, 0.1)
-- volume:SetFloat('contour_min', -1.0)
-- volume:SetFloat('contour_min', 1.0)
-- volume:SetFloat('contour_min', 0.1)
-- volume:SetFloat('contour_border_weight', 0.1)


local core = LoadModule("RenderPluginSURFACE")
core:render {camera, volume}
