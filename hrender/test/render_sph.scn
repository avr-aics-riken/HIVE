
print('Render SPH')

local camera = Camera()
camera:SetScreenSize(1024, 1024)
camera:SetFilename('image_sph.jpg')

camera:LookAt(
	0,0,300,
	0,0,0,
	0,1,0,
	60
)


local sph = LoadModule("SphLoader")
sph:Load('fvel_0000001470.sph')

print("origin", sph:OriginX(), sph:OriginY(), sph:OriginZ())
print("pitch", sph:PitchX(), sph:PitchY(), sph:PitchZ())
print("time", sph:Time())
print("step", sph:Step())

local volume = VolumeModel()
local volumedata = sph:VolumeData()
volume:Create(volumedata)
volume:SetShader('def_volume_raymarch.frag')


local analy = LoadModule("Analyzer").VolumeAnalyzer()
analy:Execute(volumedata)
print('volume min/max X:', analy:MinX(), analy:MaxX())
print('volume min/max Y:', analy:MinY(), analy:MaxY())
print('volume min/max Z:', analy:MinZ(), analy:MaxZ())

local hist = analy:GetHistgramInRange(volumedata, analy:MinX()*0.5, analy:MaxX()*0.5)
for i,v in pairs(hist) do
	print('hist['..i..'] = ', v)
end

local core = LoadModule("RenderPluginSURFACE")
core:render {camera, volume}
