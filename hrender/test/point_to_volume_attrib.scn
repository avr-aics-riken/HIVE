print('load PDB and convert particles as SPH volume data')

local p2v = LoadModule("PointToVolume")

local pdm = LoadModule("PdmLoader")
local timeStep = -1 -- => load first timeStep
local coordinateName = 'Coordinate'
local migration = false

-- Uncomment if you want PDMlib's profiling support.
-- pdm:EnableProfiling(true)

pdm:Load('tsunami_time_140.dfi', timeStep, coordinateName, migration)
local pointdata = pdm:PointData('Coordinate', 0.5) -- container name, radius
p2v:Create(pointdata)

-- Each voxel contains velocity attribute
vel = pdm:ExtraData('Velocity')
vector_length = false
p2v:ToVolumeWithAttrib(128,128,128, vel, vector_length)

-- local sph = LoadModule("SphSaver")
-- sph:SetVolumeData(p2v:VolumeData())
-- sph:Save('volume_pdm.sph')

local volSaver = LoadModule("RawVolumeSaver")
volSaver:SetVolumeData(p2v:VolumeData())

-- Save data with totally raw
-- false = no footer
append_footer = false
volSaver:Save('velocity_volume.raw', append_footer)
